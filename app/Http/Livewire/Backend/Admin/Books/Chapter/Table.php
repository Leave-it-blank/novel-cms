<?php

namespace App\Http\Livewire\Backend\Admin\Books\Chapter;

use App\Models\Chapter;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Livewire\WithPagination;
use Mediconesystems\LivewireDatatables\BooleanColumn;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\DateColumn;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;
use Mediconesystems\LivewireDatatables\NumberColumn;

class Table extends LivewireDatatable
{
    use AuthorizesRequests;
    use WithPagination;
    public $hideable = 'select';
    public $exportable = true;
    public $params, $book_id, $volume_id; //unsafe
    public function mount($model = null, $include = [], $exclude = [], $hide = [], $dates = [], $times = [], $searchable = [], $sort = null, $hideHeader = null, $hidePagination = null, $perPage = 10, $exportable = false, $hideable = false, $beforeTableSlot = false, $afterTableSlot = false, $params = [])
    {
        parent::mount($model, $include, $exclude, $hide, $dates, $times, $searchable, $sort, $hideHeader, $hidePagination, $perPage, $exportable, $hideable, $beforeTableSlot, $afterTableSlot, $params); // TODO: Change the autogenerated stub
        $ids = explode(" ", $this->params);

        $this->volume_id = $ids[1];
        $this->book_id = $ids[0];
    }

    public function builder()
    {
       return Chapter::Admin_Get_Chapter($this->volume_id);
    }
    public function delete_chapter(Chapter $chapter)
    {
        $this->authorize('delete', $chapter, Chapter::class);
        $chapter->delete();
        $this->emit('Danger_alert',  $chapter->number . ' has been deleted!');
        $this->emit('refreshLivewireDatatable');
        // return redirect()->route('admin.books');
    }
    public function columns(): array
    {
        return [
            Column::checkbox(),
            NumberColumn::name('id')
                ->label('ID')
                ->hide(),
            NumberColumn::name('number')
                ->label('Chapter Number')
                ->searchable()
                ->filterable(),
            Column::name('name')
                ->label('Chapter Name')
                ->defaultSort('asc')
                ->searchable()
                ->filterable(),
            BooleanColumn::name('locked')
                ->label('Locked?')
                ->filterable()
                ->hide(),
            NumberColumn::name('volume_id')
                ->label('Volume')
           //   ->editable()
                ->hide(),

            DateColumn::name('updated_at')
                ->label('Last Updated')
                ->filterable()
                ->hide(),

            Column::callback(['id', 'number', 'volume_id', 'volume.book_id'], function ($id, $number, $volume_id, $book_id) {
                return view('livewire.backend.admin.books.chapter.table-actions',
                    ['id' => $id,
                        'number' => $number ,
                        'volume_id'=> $volume_id,
                        'book_id' => $this->book_id
                ]);
            })
        ];
    }
}
